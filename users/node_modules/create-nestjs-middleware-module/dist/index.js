"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@nestjs/common");
const DEFAULT_ROUTES = [{ path: '*', method: common_1.RequestMethod.ALL }];
const DEFAULT_OPTIONS = {};
function createModule(createMiddlewares) {
    var FacadeModule_1, CoreModule_1;
    const optionsToken = Symbol();
    let FacadeModule = FacadeModule_1 = class FacadeModule {
        static forRoot(options) {
            return {
                module: FacadeModule_1,
                imports: [CoreModule.forRoot(options)],
            };
        }
        static forRootAsync(options) {
            return {
                module: FacadeModule_1,
                imports: [CoreModule.forRootAsync(options)],
            };
        }
    };
    FacadeModule = FacadeModule_1 = __decorate([
        common_1.Module({})
    ], FacadeModule);
    let CoreModule = CoreModule_1 = class CoreModule {
        constructor(options) {
            this.options = options;
        }
        static forRoot(options) {
            const optionsProvider = {
                provide: optionsToken,
                useValue: options || null,
            };
            return {
                module: CoreModule_1,
                providers: [optionsProvider],
            };
        }
        static forRootAsync(options) {
            const optionsProvider = {
                provide: optionsToken,
                useFactory: options.useFactory,
                inject: options.inject,
            };
            return {
                module: CoreModule_1,
                imports: options.imports,
                providers: [optionsProvider],
            };
        }
        configure(consumer) {
            const _a = this.options || DEFAULT_OPTIONS, { exclude, forRoutes = DEFAULT_ROUTES } = _a, createMiddlewaresOpts = __rest(_a, ["exclude", "forRoutes"]);
            const result = createMiddlewares(createMiddlewaresOpts);
            let middlewares;
            if (Array.isArray(result)) {
                middlewares = result;
            }
            else {
                middlewares = [result];
            }
            if (exclude) {
                consumer
                    .apply(...middlewares)
                    .exclude(...exclude)
                    .forRoutes(...forRoutes);
            }
            else {
                consumer.apply(...middlewares).forRoutes(...forRoutes);
            }
        }
    };
    CoreModule = CoreModule_1 = __decorate([
        common_1.Module({}),
        __param(0, common_1.Inject(optionsToken)),
        __metadata("design:paramtypes", [Object])
    ], CoreModule);
    return FacadeModule;
}
exports.createModule = createModule;
//# sourceMappingURL=index.js.map